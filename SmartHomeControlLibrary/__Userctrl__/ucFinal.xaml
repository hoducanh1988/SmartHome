<UserControl x:Class="SmartHomeControlLibrary.__Userctrl__.ucFinal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SmartHomeControlLibrary.__Userctrl__"
             mc:Ignorable="d" 
             d:DesignHeight="140" d:DesignWidth="1000" Background="Transparent">

    <Border Background="White" BorderThickness="0,0,0,0" BorderBrush="#777777" Margin="0,10,0,0">
        <!--<Border.BitmapEffect>
            <DropShadowBitmapEffect ShadowDepth="10"/>
        </Border.BitmapEffect>-->

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>

            <!--Background="#fffa84"-->
            <Border Grid.Row="0" BorderBrush="#777777" BorderThickness="1,1,1,1">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=TotalResult}" Value="-">
                                    <Setter Property="Background" Value="#d3ecff"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                    <Setter Property="Background" Value="Lime"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                    <Setter Property="Background" Value="Red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=TotalResult}" Value="Waiting...">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Left">
                        <Label Margin="0,-5,0,0" FontSize="20" VerticalAlignment="Center" FontWeight="Normal" Content="Device ID: "/>
                        <Label Margin="0,-5,0,0" FontSize="20" VerticalAlignment="Center" FontWeight="Bold" Content="{Binding Path=FID, UpdateSourceTrigger=PropertyChanged}"/>
                    </WrapPanel>
                    <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Label Margin="0,-5,0,0" FontSize="20" VerticalAlignment="Center" FontWeight="Bold" Content="{Binding Path=FdeviceIndex, UpdateSourceTrigger=PropertyChanged}"/>
                    </WrapPanel>
                    <CheckBox Checked="CheckBox_Checked"  FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Content="VIEW LOG DETAIL">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </Grid>
            </Border>


            <WrapPanel Grid.Row="1">
                <WrapPanel.Style>
                    <Style TargetType="WrapPanel">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </WrapPanel.Style>
                
                <Border Width="165" BorderBrush="#999999" BorderThickness="1,0,0,1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsCheckTemperature}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <WrapPanel>
                            <Label Width="112" FontWeight="SemiBold" FontSize="14" Content="Temperature (C)"/>
                            <Button Click="Button_Click" Tag="test_temperature" Content="Test" Height="25" Width="50"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label Content="{Binding Path=ValidateTemperature, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="17">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ValidateTemperature}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ValidateTemperature}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ValidateTemperature}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label VerticalAlignment="Bottom" Content="Act:"/>
                            <Label Margin="-5,0,0,0" VerticalAlignment="Bottom" Content="{Binding Path=TemperatureActual, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label VerticalAlignment="Bottom" Content="Std:"/>
                            <Label VerticalAlignment="Bottom" Content="{Binding Path=TemperatureValue, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label VerticalAlignment="Bottom" Content="&#xb1;"/>
                            <Label VerticalAlignment="Bottom" Content="{Binding Path=TemperatureAccuracy, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>

                    </StackPanel>
                </Border>
                <Border Width="165" BorderBrush="#999999" BorderThickness="1,0,0,1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsCheckHumidity}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <WrapPanel>
                            <Label Width="112" Content="Humidity (%)" FontSize="14" FontWeight="SemiBold"/>
                            <Button Click="Button_Click" Tag="test_humidity" Content="Test" Height="25" Width="50"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label Content="{Binding Path=ValidateHumidity, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="17">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ValidateHumidity}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ValidateHumidity}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ValidateHumidity}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label VerticalAlignment="Bottom" Content="Act:"/>
                            <Label Margin="-5,0,0,0" VerticalAlignment="Bottom" Content="{Binding Path=HumidityActual, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label VerticalAlignment="Bottom" Content="Std:"/>
                            <Label VerticalAlignment="Bottom" Content="{Binding Path=HumidityValue, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label VerticalAlignment="Bottom" Content="&#xb1;"/>
                            <Label VerticalAlignment="Bottom" Content="{Binding Path=HumidityAccuracy, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>

                    </StackPanel>
                </Border>
                <Border Width="110" BorderBrush="#999999" BorderThickness="1,0,0,1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsCheckLED}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <Label Content="LED" FontSize="14" FontWeight="SemiBold"/>
                        <ComboBox x:Name="cbb_LED" IsEnabled="False" Margin="0,-7,0,0" Text="{Binding Path=ValidateLED, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" IsEditable="True" FontWeight="Bold" FontSize="17">
                            <ComboBox.Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ValidateLED}" Value="Passed">
                                            <Setter Property="Foreground" Value="Lime"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ValidateLED}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ValidateLED}" Value="Waiting...">
                                            <Setter Property="Foreground" Value="Orange"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                        <WrapPanel Margin="0,2,0,0">
                            <Button Click="Button_Click" Tag="led_on" Margin="5,0,0,0" Width="35" Content="Xanh"/>
                            <Button Click="Button_Click" Tag="led_off" Margin="10,0,0,0" Width="35" Content="Đỏ"/>
                        </WrapPanel>
                    </StackPanel>
                </Border>
                <Border Width="110" BorderBrush="#999999" BorderThickness="1,0,0,1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsCheckSpeaker}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <Label Content="Speaker" FontSize="14" FontWeight="SemiBold"/>
                        <ComboBox x:Name="cbb_Speaker" IsEnabled="False" Margin="0,-7,0,0" Text="{Binding Path=ValidateSpeaker, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" IsEditable="True" FontWeight="Bold" FontSize="17">
                            <ComboBox.Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ValidateSpeaker}" Value="Passed">
                                            <Setter Property="Foreground" Value="Lime"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ValidateSpeaker}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ValidateSpeaker}" Value="Waiting...">
                                            <Setter Property="Foreground" Value="Orange"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                        <WrapPanel Margin="0,2,0,0">
                            <Button Click="Button_Click" Tag="speaker_on" Margin="5,0,0,0" Width="35" Content="ON"/>
                            <Button Click="Button_Click" Tag="speaker_off" Margin="10,0,0,0" Width="35" Content="OFF"/>
                        </WrapPanel>
                    </StackPanel>
                </Border>
                <Border Width="165" BorderBrush="#999999" BorderThickness="1,0,0,1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsCheckPPM}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=ValidateTemperature}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidateHumidity}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidateLED}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidateSpeaker}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidatePPM}" Value="-"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <WrapPanel>
                            <Label Width="112" Content="PPM (ppm)" FontSize="14" FontWeight="SemiBold"/>
                            <Button Click="Button_Click" Tag="test_ppm" Content="Test" Height="25" Width="50"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label Content="{Binding Path=ValidatePPM, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="17">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ValidatePPM}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ValidatePPM}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ValidatePPM}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label VerticalAlignment="Bottom" Content="Act:"/>
                            <Label Margin="-5,0,0,0" VerticalAlignment="Bottom" Content="{Binding Path=PPMActual, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label VerticalAlignment="Bottom" Content="Std:"/>
                            <Label VerticalAlignment="Bottom" Content="{Binding Path=PPMValue, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label VerticalAlignment="Bottom" Content="&#xb1;"/>
                            <Label VerticalAlignment="Bottom" Content="{Binding Path=PPMAccuracy, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                    </StackPanel>
                </Border>
                <Border Width="165" BorderBrush="#999999" BorderThickness="1,0,0,1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSwitchFirmwareMode}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=ValidateTemperature}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidateHumidity}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidateLED}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidateSpeaker}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=ValidatePPM}" Value="Passed"/>
                                        <Condition Binding="{Binding Path=SwitchFirmwareMode}" Value="-"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <WrapPanel>
                            <Label Width="112" Content="User mode" FontSize="14" FontWeight="SemiBold"/>
                            <Button Click="Button_Click" Tag="test_usermode" Content="Test" Height="25" Width="50"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0" >
                            <Label Content="{Binding Path=SwitchFirmwareMode, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="17">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SwitchFirmwareMode}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SwitchFirmwareMode}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SwitchFirmwareMode}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label VerticalAlignment="Bottom" Content="Act:"/>
                            <Label Margin="-5,0,0,0" VerticalAlignment="Bottom" Content="{Binding Path=FirmwareModeActual, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-7,0,0">
                            <Label Content="Std:"/>
                            <Label Content="{Binding Path=FirmwareModeValue, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>

                    </StackPanel>
                </Border>
                <Border Width="110" BorderBrush="#999999" BorderThickness="1,0,1,1">
                    <StackPanel>
                        <Label Content="Total result" FontSize="14" FontWeight="SemiBold"/>
                        <Label Margin="0,-7,0,0" Content="{Binding Path=TotalResult, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="17">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                            <Setter Property="Foreground" Value="Lime"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=TotalResult}" Value="Waiting...">
                                            <Setter Property="Foreground" Value="Orange"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </StackPanel>
                </Border>
            </WrapPanel>

        </Grid>
    </Border>


</UserControl>
