<UserControl x:Class="SmartHomeControlLibrary.CarbonMonoxideDetector.FINALFUNCTION.SETTING"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SmartHomeControlLibrary.CarbonMonoxideDetector.FINALFUNCTION"
             mc:Ignorable="d" 
             d:DesignHeight="595" d:DesignWidth="985" Background="White">

    <Border BorderBrush="#999999" BorderThickness="1,1,1,1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>

            <!--content-->
            <ScrollViewer>

                <!--<ScrollViewer.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.25" Color="#FFFFFF"/>
                    <GradientStop Offset="0.75" Color="#E0E0E0"/>
                    <GradientStop Offset="0.95" Color="#E0E0E0"/>
                </LinearGradientBrush>
            </ScrollViewer.Background>-->

                <ScrollViewer.Resources>
                    <!--label titlte-->
                    <Style x:Key="label_style" TargetType="Label">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderBrush" Value="#777777"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="Margin" Value="0,15,0,0"/>

                    </Style>

                    <!--label content-->
                    <Style TargetType="Label">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Margin" Value="0,0,0,0"/>
                        <Setter Property="Width" Value="200"/>
                        <Setter Property="BorderBrush" Value="#777777"/>
                        <Setter Property="BorderThickness" Value="1,0,1,1"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="Padding" Value="5,3,0,0"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>

                    <!--textbox-->
                    <Style TargetType="TextBox">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="BorderBrush" Value="#777777"/>
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Margin" Value="200,0,0,0"/>
                        <Setter Property="Padding" Value="5,0,0,0"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Foreground" Value="Blue"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="White"/>
                        <Style.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#e1f2b8"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!--combobox-->
                    <Style TargetType="ComboBox">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="BorderBrush" Value="#777777"/>
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Margin" Value="200,0,0,0"/>
                        <Setter Property="Padding" Value="5,0,0,0"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Foreground" Value="Blue"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="IsEditable" Value="True"/>
                        <EventSetter Event="PreviewMouseWheel" Handler="ComboBox_PreviewMouseWheel"/>
                    </Style>

                    <!--button-->
                    <Style x:Key="button_style" TargetType="Button">
                        <Setter Property="Content" Value="..."/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="Width" Value="20"/>
                        <Setter Property="BorderThickness" Value="1,0,1,1"/>
                        <EventSetter Event="Click" Handler="Button_Click"/>
                    </Style>

                    <!--Border-->
                    <Style TargetType="Border">
                        <Setter Property="Margin" Value="200,0,0,0"/>
                        <Setter Property="BorderBrush" Value="#777777"/>
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    </Style>

                    <!--CheckBox-->
                    <Style TargetType="CheckBox">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Margin" Value="0,0,0,0"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="True">
                                <Setter Property="Foreground" Value="Blue"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Opacity" Value="1"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </ScrollViewer.Resources>

                <StackPanel Margin="15,0,15,5" Width="700" HorizontalAlignment="Left">


                    <!--CÀI ĐẶT USB DONGLE TRAM TEST-->
                    <Label Style="{StaticResource label_style}" Content="# CÀI ĐẶT USB DONGLE TRẠM TEST"/>
                    <Grid>
                        <Label Content="Tên cổng COM (usb dongle)"/>
                        <TextBox Tag="serialportname" GotFocus="FrameWorkElement_Focus"
                        Text="{Binding Path=SerialPortName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid>
                        <Label Content="BaudRate (usb dongle)"/>
                        <TextBox Tag="serialbaudrate" GotFocus="FrameWorkElement_Focus"
                             Text="{Binding Path=SerialBaudRate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label Content="Data bits (usb dongle)"/>
                        <TextBox Tag="serialdatabits" GotFocus="FrameWorkElement_Focus"
                             Text="{Binding Path=SerialDataBits, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label Content="Parity (usb dongle)"/>
                        <TextBox Tag="serialparity" GotFocus="FrameWorkElement_Focus"
                             Text="{Binding Path=SerialParity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label Content="Stopbits (usb dongle)"/>
                        <TextBox Tag="serialstopbits" GotFocus="FrameWorkElement_Focus"
                             Text="{Binding Path=SerialStopBits, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>


                    <!--CÀI ĐẶT GIÁ TRỊ TIÊU CHUẨN-->
                    <Label Style="{StaticResource label_style}" Content="# CÀI ĐẶT GIÁ TRỊ TIÊU CHUẨN"/>
                    <Grid>
                        <Label FontWeight="SemiBold" Content="Nhiệt độ (C)"/>
                        <Border>
                            <WrapPanel Margin="5,0,0,0">
                                <Label BorderThickness="0" Width="100" Content="Tiêu chuẩn: "/>
                                <TextBox Width="100" BorderThickness="0,0,0,2" Margin="0" HorizontalAlignment="Left"
                                         Text="{Binding Path=TemperatureValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                <Label Margin="80,0,0,0" BorderThickness="0" Width="70" Content="Sai số: "/>
                                <TextBox Width="70" BorderThickness="0,0,0,2" Margin="0" HorizontalAlignment="Left"
                                         Text="{Binding Path=TemperatureAccuracy, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </WrapPanel>
                        </Border>
                    </Grid>
                    <Grid>
                        <Label FontWeight="SemiBold" Content="Độ ẩm (%)"/>
                        <Border>
                            <WrapPanel Margin="5,0,0,0">
                                <Label BorderThickness="0" Width="100" Content="Tiêu chuẩn: "/>
                                <TextBox Width="100" BorderThickness="0,0,0,2" Margin="0" HorizontalAlignment="Left"
                                         Text="{Binding Path=HumidityValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                <Label Margin="80,0,0,0" BorderThickness="0" Width="70" Content="Sai số: "/>
                                <TextBox Width="70" BorderThickness="0,0,0,2" Margin="0" HorizontalAlignment="Left"
                                         Text="{Binding Path=HumidityAccuracy, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </WrapPanel>
                        </Border>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label FontWeight="SemiBold" Content="CO (ppm)"/>
                        <Border>
                            <WrapPanel Margin="5,0,0,0">
                                <Label BorderThickness="0" Width="100" Content="Tiêu chuẩn: "/>
                                <TextBox Width="100" BorderThickness="0,0,0,2" Margin="0" HorizontalAlignment="Left"
                                         Text="{Binding Path=PPMValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                <Label Margin="80,0,0,0" BorderThickness="0" Width="70" Content="Sai số: "/>
                                <TextBox Width="70" BorderThickness="0,0,0,2" Margin="0" HorizontalAlignment="Left"
                                         Text="{Binding Path=PPMAccuracy, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </WrapPanel>
                        </Border>
                    </Grid>

                    <!--CÀI ĐẶT SQL SERVER-->
                    <Label Style="{StaticResource label_style}" Content="# CÀI ĐẶT SQL SERVER"/>
                    <Grid IsEnabled="False">
                        <Label Content="Tên SQL Server"/>
                        <TextBox Tag="sqlservername" GotFocus="FrameWorkElement_Focus"
                        Text="{Binding Path=SqlServerName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label Content="SQL Database"/>
                        <TextBox Tag="sqldatabase" GotFocus="FrameWorkElement_Focus"
                        Text="{Binding Path=SqlDatabase, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label Content="SQL User"/>
                        <TextBox Tag="sqluser" GotFocus="FrameWorkElement_Focus"
                        Text="{Binding Path=SqlUser, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>
                    <Grid IsEnabled="False">
                        <Label Content="SQL Password"/>
                        <TextBox Tag="sqlpassword" GotFocus="FrameWorkElement_Focus"
                        Text="{Binding Path=SqlPassword, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    </Grid>

                    <!--CÀI ĐẶT BÀI TEST-->
                    <Label Style="{StaticResource label_style}" Content="# CÀI ĐẶT BÀI TEST"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Height="135" Grid.Column="0" Content="Lựa chọn bài test"/>

                        <Border Grid.Column="1" Margin="0">
                            <StackPanel>
                                <CheckBox Margin="10,5,0,0" Content="Test cảm biến đo nhiệt độ"
                                      IsChecked="{Binding Path=IsCheckTemperature, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Margin="10,5,0,0" Content="Test cảm biến đo độ ẩm"
                                      IsChecked="{Binding Path=IsCheckHumidity, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Margin="10,5,0,0" Content="Test LED"
                                      IsChecked="{Binding Path=IsCheckLED, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Margin="10,5,0,0" Content="Test còi báo động"
                                      IsChecked="{Binding Path=IsCheckSpeaker, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox IsEnabled="False" Margin="10,5,0,0" Content="Test cảm biến CO"
                                      IsChecked="{Binding Path=IsCheckPPM, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox IsEnabled="False" Margin="10,5,0,0" Content="Chuyển firmware sang mode thương mại"
                                      IsChecked="{Binding Path=IsSwitchFirmwareMode, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Border>

                    </Grid>

                    <TextBlock Margin="0,0,0,30"/>
                </StackPanel>


            </ScrollViewer>

            <!--Legend-->
            <Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="#777777">
                <TextBlock FontSize="13" x:Name="tbGuide" Foreground="Red" FontWeight="Normal" FontStyle="Normal" Padding="15,5,0,0" Background="Transparent" TextWrapping="Wrap" TextBlock.LineHeight="1" Text=""/>
            </Border>

            <!--button-->
            <Grid Grid.Row="2">
                <Button Click="Button_Click" Tag="save_setting" FontSize="18" Background="#C0C0C0" BorderThickness="0,0,0,0" Content="LƯU CÀI ĐẶT"/>
            </Grid>

        </Grid>
    </Border>
    
</UserControl>
